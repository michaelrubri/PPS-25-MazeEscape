name: Release on Tag

on:
  push:
    tags:
      - 'v*.*.*'  # Attiva il workflow solo su tag semantici
permissions:
  contents: write
jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Install sbt
        uses: coursier/setup-action@v1
        with:
          apps: sbt

      - name: Cache sbt
        uses: actions/cache@v3
        with:
          path: |
            ~/.ivy2/cache
            ~/.sbt
            ~/.coursier
          key: ${{ runner.os }}-sbt-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Run sbt assembly
        run: sbt "set ThisBuild / coverageEnabled := false" assembly

      - name: Debug - List target directory
        run: |
          echo "Contents of target directory:"
          find target -type f -name "*.jar" | head -20
          echo "Full directory structure:"
          ls -la target/
          if [ -d "target/scala-3.3.1" ]; then
            echo "Contents of target/scala-3.3.1:"
            ls -la target/scala-3.3.1/
          fi

      - name: Find JAR file
        id: find_jar
        run: |
          # Cerca il JAR assembly nel percorso tipico di sbt
          JAR_PATH=$(find target -name "*assembly*.jar" -o -name "*mazeescape*.jar" | head -n 1)
          if [ -z "$JAR_PATH" ]; then
            echo "No JAR file found with assembly or MazeEscape name"
            # Fallback: cerca qualsiasi JAR nella directory target
            JAR_PATH=$(find target -name "*.jar" | head -n 1)
          fi
          
          if [ -z "$JAR_PATH" ]; then
            echo "ERROR: No JAR file found in target directory"
            exit 1
          fi
          
          echo "Found JAR: $JAR_PATH"
          echo "JAR_PATH=$JAR_PATH" >> $GITHUB_OUTPUT
          
          # Verifica che il file esista ed Ã¨ non vuoto
          if [ ! -f "$JAR_PATH" ]; then
            echo "ERROR: JAR file does not exist: $JAR_PATH"
            exit 1
          fi
          
          echo "JAR file size: $(du -h $JAR_PATH)"

      - name: Upload release to GitHub
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: ${{ steps.find_jar.outputs.JAR_PATH }}
          body: |
            ## Release ${{ github.ref_name }}
            
            Automatic release created from tag ${{ github.ref_name }}
            
            ### Files included:
            - MazeEscaped.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}